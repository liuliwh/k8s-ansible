---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: httpserver
  name: httpserver
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: httpserver
      app: httpserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: httpserver
        app: httpserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - httpserver
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: httpserver
          image: sarah4test/httpserver:latest@sha256:e75d85b5086ace7e926e685c80716b657c43a2510485505fef123f99057f1923
          env:
            - name: VERSION
              value: "v1.0.1"
            - name: VERBOSE
              value: "3"
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 15
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: httpserver
  name: httpservice
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: httpserver
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpserver-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: httpserver.localdev.me
    http:
      paths:
        - path: /
          backend:
            service:
              name: httpservice
              port:
                number: 8080
          pathType: Prefix